-- categories the customer spending to find the loyality customer
SET linesize 120
SET pagesize 100

CREATE OR REPLACE VIEW StrategicCustomerValue AS
SELECT
    c.customerId,
    c.firstName || ' ' || c.lastName AS customerName,
    c.membershipStatus,
    bc.companyName,
    r.routeName,
    SUM(pr.totalAmount) AS totalSpending,
    NVL(SUM(pt.pointChange),0) AS totalPointsEarned,
    COUNT(t.ticketId) AS totalTickets,
    COUNT(bs.busScheduleId) AS schedulesUsed,
    ROUND(AVG(pr.totalAmount),2) AS avgSpendPerTrip,
    CASE 
      WHEN SUM(pr.totalAmount) > 1000 THEN 'High Value'
      WHEN SUM(pr.totalAmount) BETWEEN 500 AND 1000 THEN 'Medium Value'
      ELSE 'Low Value'
    END AS customerCategory
FROM customer c
JOIN ticket t ON c.customerId = t.customerId
JOIN busSchedule bs ON t.busScheduleId = bs.busScheduleId
JOIN routeDriverAssignmentList rda ON bs.routeDriverAssignmentId = rda.routeDriverAssignmentId
JOIN route r ON rda.routeId = r.routeId
JOIN bus b ON rda.assignmentId IN (
    SELECT assignmentId FROM driverListAssignment WHERE busId = b.busId
)
JOIN busCompany bc ON b.companyId = bc.companyId
LEFT JOIN paymentRecord pr ON t.ticketId = pr.ticketId
LEFT JOIN pointTransaction pt ON pr.paymentId = pt.paymentId
WHERE 
    pr.status = 'completed'
    AND t.status IN ('booked_extended','been_bought')
GROUP BY c.customerId, c.firstName, c.lastName, c.membershipStatus, bc.companyName, r.routeName;

-- NVL use for process the null value