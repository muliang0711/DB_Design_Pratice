/* ===========================================================
   BUS STATION MANAGEMENT — PLAIN DROP (child → parent)
   =========================================================== */
DROP TABLE POINT_TRANSACTION;
DROP TABLE PAYMENT_RECORD;
DROP TABLE TICKET;
DROP TABLE TRIP_STOP_LOG;
DROP TABLE BUS_SCHEDULE;
DROP TABLE ROUTE_DRIVER_ASSIGNMENT_LIST;
DROP TABLE DRIVER_LIST_ASSIGNMENT;
DROP TABLE ROUTE_STATION;
DROP TABLE MAINTENANCE_STAFF_ASSIGNMENT;
DROP TABLE BUS_MAINTENANCE;
DROP TABLE RENTAL_COLLECTION;
DROP TABLE SHOP;
DROP TABLE BUS_DRIVER;
DROP TABLE BUS;
DROP TABLE ROUTE;
DROP TABLE BUS_PLATFORM;
DROP TABLE STAFF;
DROP TABLE CUSTOMER;
DROP TABLE BUS_STATION;
DROP TABLE BUS_COMPANY;
DROP TABLE STAFF_ROLE;
DROP TABLE MAINTENANCE_SERVICE;

/* ===========================================================
   BUS STATION MANAGEMENT — CREATE (parent → child)
   =========================================================== */

-- ========= PARENTS =========
CREATE TABLE STAFF_ROLE (
  ROLE_ID       VARCHAR2(12)  PRIMARY KEY,
  ROLE_NAME     VARCHAR2(50)  NOT NULL,
  DESCRIPTION   VARCHAR2(200)
);

CREATE TABLE BUS_COMPANY (
  COMPANY_ID      VARCHAR2(12)  PRIMARY KEY,
  COMPANY_NAME    VARCHAR2(100) NOT NULL,
  REGISTRATION_NO VARCHAR2(50)  UNIQUE,
  PHONE_NUMBER    VARCHAR2(20),
  EMAIL           VARCHAR2(100),
  ADDRESS         VARCHAR2(200),
  STATUS          VARCHAR2(20),
  CREATED_AT      TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT      TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT CHK_BUS_COMPANY_STATUS CHECK (LOWER(STATUS) IN ('active','inactive'))
);

CREATE TABLE BUS_STATION (
  STATION_ID   VARCHAR2(12)  PRIMARY KEY,
  STATION_NAME VARCHAR2(100),
  LOCATION     VARCHAR2(150),
  STATUS       VARCHAR2(20),
  CREATED_AT   TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT CHK_STATION_STATUS CHECK (LOWER(STATUS) IN ('active','inactive'))
);

CREATE TABLE CUSTOMER (
  CUSTOMER_ID        VARCHAR2(12)  PRIMARY KEY,
  FIRST_NAME         VARCHAR2(50)  NOT NULL,
  LAST_NAME          VARCHAR2(50)  NOT NULL,
  IC_PASSPORT_NO     VARCHAR2(30)  NOT NULL UNIQUE,
  GENDER             VARCHAR2(10),
  BIRTH_DATE         DATE,
  PHONE_NUMBER       VARCHAR2(20),
  EMAIL              VARCHAR2(100),
  MEMBERSHIP_STATUS  VARCHAR2(10)  NOT NULL,
  POINT_BALANCE      NUMBER(10)    DEFAULT 0,
  CREATED_AT         TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT         TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT CHK_CUSTOMER_GENDER CHECK (GENDER IS NULL OR UPPER(GENDER) IN ('FEMALE','MALE')),
  CONSTRAINT CHK_MEMBERSHIP_STATUS CHECK (LOWER(MEMBERSHIP_STATUS) IN ('guest','member'))
);

CREATE TABLE MAINTENANCE_SERVICE (
  SERVICE_ID      VARCHAR2(12)  PRIMARY KEY,
  SERVICE_ITEM    VARCHAR2(100) NOT NULL,
  SERVICE_COST    NUMBER(8,2),
  SERVICE_REMARKS VARCHAR2(200),
  CREATED_AT      TIMESTAMP     DEFAULT SYSTIMESTAMP
);

-- ========= DIRECT CHILDREN OF PARENTS =========
CREATE TABLE BUS (
  BUS_ID       VARCHAR2(12)  PRIMARY KEY,
  COMPANY_ID   VARCHAR2(12)  NOT NULL,
  PLATE_NO     VARCHAR2(20)  NOT NULL UNIQUE,
  MODEL        VARCHAR2(50),
  CAPACITY     NUMBER(10),
  STATUS       VARCHAR2(20),
  YEAR         NUMBER(4),
  REMARKS      VARCHAR2(200),
  CREATED_AT   TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT   TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_BUS_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES BUS_COMPANY (COMPANY_ID),
  CONSTRAINT CHK_BUS_STATUS CHECK (LOWER(STATUS) IN ('active','inactive','under_maintenance','retired'))
);

CREATE TABLE BUS_DRIVER (
  DRIVER_ID      VARCHAR2(12)  PRIMARY KEY,
  COMPANY_ID     VARCHAR2(12),
  LICENSE_NO     VARCHAR2(50)  UNIQUE,
  LICENSE_EXPIRY DATE          NOT NULL,
  FIRST_NAME     VARCHAR2(50)  NOT NULL,
  LAST_NAME      VARCHAR2(50)  NOT NULL,
  PHONE_NUMBER   VARCHAR2(20),
  STATUS         VARCHAR2(20)  DEFAULT 'active',
  CREATED_AT     TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT     TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_DRV_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES BUS_COMPANY (COMPANY_ID),
  CONSTRAINT CHK_DRV_STATUS CHECK (LOWER(STATUS) IN ('active','inactive','suspended'))
);

CREATE TABLE STAFF (
  STAFF_ID       VARCHAR2(12)  PRIMARY KEY,
  ROLE_ID        VARCHAR2(12),
  STATION_ID     VARCHAR2(12),
  FIRST_NAME     VARCHAR2(50)  NOT NULL,
  LAST_NAME      VARCHAR2(50)  NOT NULL,
  IC_PASSPORT_NO VARCHAR2(30)  NOT NULL UNIQUE,
  PHONE_NUMBER   VARCHAR2(20),
  EMAIL          VARCHAR2(100),
  HIRE_DATE      DATE,
  SALARY         NUMBER(10,2),
  STATUS         VARCHAR2(20),
  CREATED_AT     TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT     TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_STAFF_ROLE    FOREIGN KEY (ROLE_ID)    REFERENCES STAFF_ROLE (ROLE_ID),
  CONSTRAINT FK_STAFF_STATION FOREIGN KEY (STATION_ID) REFERENCES BUS_STATION (STATION_ID)
);

CREATE TABLE SHOP (
  SHOP_ID     VARCHAR2(12)  PRIMARY KEY,
  STATION_ID  VARCHAR2(12)  NOT NULL,
  SHOP_NO     VARCHAR2(20)  NOT NULL,
  SHOP_TYPE   VARCHAR2(20),
  SHOP_SIZE   NUMBER(8,2),
  STATUS      VARCHAR2(20),
  CREATED_AT  TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT  TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_SHOP_STATION FOREIGN KEY (STATION_ID) REFERENCES BUS_STATION (STATION_ID),
  CONSTRAINT UK_SHOP_STATION_NO UNIQUE (STATION_ID, SHOP_NO)
);

CREATE TABLE BUS_PLATFORM (
  PLATFORM_ID   VARCHAR2(12)  PRIMARY KEY,
  STATION_ID    VARCHAR2(12)  NOT NULL,
  PLATFORM_NAME VARCHAR2(100) NOT NULL,
  LOCATION      VARCHAR2(150),
  STATUS        VARCHAR2(20),
  CREATED_AT    TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_PLATFORM_STATION FOREIGN KEY (STATION_ID) REFERENCES BUS_STATION (STATION_ID),
  CONSTRAINT UK_PLATFORM_STATION_NAME UNIQUE (STATION_ID, PLATFORM_NAME),
  CONSTRAINT CHK_PLATFORM_STATUS CHECK (LOWER(STATUS) IN ('active','inactive'))
);

CREATE TABLE ROUTE (
  ROUTE_ID               VARCHAR2(12)  PRIMARY KEY,
  ROUTE_NAME             VARCHAR2(50)  NOT NULL,
  START_POINT            VARCHAR2(12)  NOT NULL,  -- FK → BUS_STATION
  END_POINT              VARCHAR2(12)  NOT NULL,  -- FK → BUS_STATION
  DISTANCE_KM            NUMBER(6,2),
  ESTIMATED_DURATION     NUMBER(10),   -- minutes
  PLANNED_DEPARTURE_TIME VARCHAR2(5),  -- 'HH:MI'
  PLANNED_ARRIVAL_TIME   VARCHAR2(5),  -- 'HH:MI'
  STATUS                 VARCHAR2(20),
  CREATED_AT             TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT             TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_ROUTE_START FOREIGN KEY (START_POINT) REFERENCES BUS_STATION (STATION_ID),
  CONSTRAINT FK_ROUTE_END   FOREIGN KEY (END_POINT)   REFERENCES BUS_STATION (STATION_ID),
  CONSTRAINT UK_ROUTE_START_END UNIQUE (START_POINT, END_POINT),
  CONSTRAINT CHK_ROUTE_STATUS CHECK (LOWER(STATUS) IN ('active','inactive')),
  CONSTRAINT CHK_ROUTE_TIME_FMT CHECK (
    (PLANNED_DEPARTURE_TIME IS NULL OR REGEXP_LIKE(PLANNED_DEPARTURE_TIME,'^[0-2][0-9]:[0-5][0-9]$')) AND
    (PLANNED_ARRIVAL_TIME   IS NULL OR REGEXP_LIKE(PLANNED_ARRIVAL_TIME,'^[0-2][0-9]:[0-5][0-9]$'))
  )
);

-- ========= SECOND-LEVEL CHILDREN =========
CREATE TABLE ROUTE_STATION (
  ROUTE_STATION_ID         VARCHAR2(12) PRIMARY KEY,
  ROUTE_ID                 VARCHAR2(12) NOT NULL,
  PLATFORM_ID              VARCHAR2(12) NOT NULL,
  STOP_ORDER               NUMBER(10)   NOT NULL,
  ESTIMATED_ARRIVAL_OFFSET NUMBER(10),
  CONSTRAINT FK_RS_ROUTE    FOREIGN KEY (ROUTE_ID)    REFERENCES ROUTE (ROUTE_ID),
  CONSTRAINT FK_RS_PLATFORM FOREIGN KEY (PLATFORM_ID) REFERENCES BUS_PLATFORM (PLATFORM_ID),
  CONSTRAINT UK_RS_ROUTE_STOPORDER UNIQUE (ROUTE_ID, STOP_ORDER),
  CONSTRAINT UK_RS_ROUTE_PLATFORM  UNIQUE (ROUTE_ID, PLATFORM_ID)
);

CREATE TABLE DRIVER_LIST_ASSIGNMENT (
  ASSIGNMENT_ID     VARCHAR2(12)  PRIMARY KEY,
  MAIN_DRIVER_ID    VARCHAR2(12)  NOT NULL,
  SUPPORT_DRIVER_ID VARCHAR2(12),
  BUS_ID            VARCHAR2(12)  NOT NULL,
  ASSIGNED_FROM     TIMESTAMP,
  ASSIGNED_TO       TIMESTAMP,
  STATUS            VARCHAR2(20)  DEFAULT 'not_assigned',
  REMARKS           VARCHAR2(200),
  CONSTRAINT FK_DLA_MAIN     FOREIGN KEY (MAIN_DRIVER_ID)    REFERENCES BUS_DRIVER (DRIVER_ID),
  CONSTRAINT FK_DLA_SUPPORT  FOREIGN KEY (SUPPORT_DRIVER_ID) REFERENCES BUS_DRIVER (DRIVER_ID),
  CONSTRAINT FK_DLA_BUS      FOREIGN KEY (BUS_ID)            REFERENCES BUS (BUS_ID),
  CONSTRAINT UK_DLA UNIQUE (MAIN_DRIVER_ID, SUPPORT_DRIVER_ID, BUS_ID, ASSIGNED_FROM),
  CONSTRAINT CHK_DLA_STATUS  CHECK (LOWER(STATUS) IN ('inactive','active','not_assigned')),
  CONSTRAINT CHK_DLA_DISTINCT CHECK (SUPPORT_DRIVER_ID IS NULL OR SUPPORT_DRIVER_ID <> MAIN_DRIVER_ID)
);

CREATE TABLE ROUTE_DRIVER_ASSIGNMENT_LIST (
  ROUTE_DRIVER_ASSIGNMENT_ID VARCHAR2(12) PRIMARY KEY,
  ROUTE_ID        VARCHAR2(12)  NOT NULL,
  ASSIGNMENT_ID   VARCHAR2(12)  NOT NULL,
  FREQUENCY       VARCHAR2(10)  NOT NULL, -- 'daily','weekly','monthly'
  WEEKDAYS        VARCHAR2(20)  NOT NULL, -- e.g. '1,2,3'
  EFFECTIVE_FROM  DATE          NOT NULL,
  EFFECTIVE_TO    DATE,
  STATUS          VARCHAR2(20)  DEFAULT 'active',
  EXPECTED_PROFIT NUMBER(8,2),
  REMARKS         VARCHAR2(200),
  CONSTRAINT FK_RDA_ROUTE      FOREIGN KEY (ROUTE_ID)      REFERENCES ROUTE (ROUTE_ID),
  CONSTRAINT FK_RDA_ASSIGNMENT FOREIGN KEY (ASSIGNMENT_ID) REFERENCES DRIVER_LIST_ASSIGNMENT (ASSIGNMENT_ID),
  CONSTRAINT UK_RDA UNIQUE (ROUTE_ID, ASSIGNMENT_ID, EFFECTIVE_FROM),
  CONSTRAINT CHK_RDA_STATUS CHECK (LOWER(STATUS) IN ('active','inactive')),
  CONSTRAINT CHK_RDA_FREQ   CHECK (LOWER(FREQUENCY) IN ('daily','weekly','monthly'))
);

CREATE TABLE BUS_SCHEDULE (
  BUS_SCHEDULE_ID          VARCHAR2(12)  PRIMARY KEY,
  ROUTE_DRIVER_ASSIGNMENT_ID VARCHAR2(12) NOT NULL,
  PLANNED_DEPARTURE_TIME   TIMESTAMP     NOT NULL,
  PLANNED_ARRIVAL_TIME     TIMESTAMP,
  STATUS                   VARCHAR2(20)  DEFAULT 'Planned',
  REMARKS                  VARCHAR2(200),
  EXPECTED_PROFIT          NUMBER(8,2),
  CREATED_AT               TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT               TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_BS_RDA FOREIGN KEY (ROUTE_DRIVER_ASSIGNMENT_ID)
    REFERENCES ROUTE_DRIVER_ASSIGNMENT_LIST (ROUTE_DRIVER_ASSIGNMENT_ID),
  CONSTRAINT CHK_BS_STATUS CHECK (LOWER(STATUS) IN ('planned','cancelled','completed','in_progress')),
  CONSTRAINT CHK_BS_TIME   CHECK (PLANNED_ARRIVAL_TIME IS NULL OR PLANNED_ARRIVAL_TIME >= PLANNED_DEPARTURE_TIME)
);

-- ========= TICKETS / PAY / POINTS / LOGS =========
CREATE TABLE TICKET (
  TICKET_ID         VARCHAR2(12)  PRIMARY KEY,
  BUS_SCHEDULE_ID   VARCHAR2(12)  NOT NULL,
  CUSTOMER_ID       VARCHAR2(12),
  SEAT_NO           VARCHAR2(10),
  PRICE             NUMBER(8,2)   NOT NULL,
  TYPE              VARCHAR2(20),
  STATUS            VARCHAR2(30),
  CANCELLATION_DATE TIMESTAMP,
  EXTENSION_DATE    TIMESTAMP,
  EXTENDED_TO_ID    VARCHAR2(12), -- FK → BUS_SCHEDULE
  CREATED_AT        TIMESTAMP     DEFAULT SYSTIMESTAMP,
  UPDATED_AT        TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_TKT_SCHED   FOREIGN KEY (BUS_SCHEDULE_ID) REFERENCES BUS_SCHEDULE (BUS_SCHEDULE_ID),
  CONSTRAINT FK_TKT_CUST    FOREIGN KEY (CUSTOMER_ID)     REFERENCES CUSTOMER (CUSTOMER_ID),
  CONSTRAINT FK_TKT_EXT_TO  FOREIGN KEY (EXTENDED_TO_ID)  REFERENCES BUS_SCHEDULE (BUS_SCHEDULE_ID),
  CONSTRAINT CHK_TKT_TYPE   CHECK (LOWER(TYPE) IN ('regular','booking')),
  CONSTRAINT CHK_TKT_STATUS CHECK (LOWER(STATUS) IN (
    'cancelled_by_company','cancelled_by_user','booked_extended','been_bought'
  ))
);

CREATE TABLE PAYMENT_RECORD (
  PAYMENT_ID     VARCHAR2(12)  PRIMARY KEY,
  CUSTOMER_ID    VARCHAR2(12),
  TICKET_ID      VARCHAR2(12),
  TOTAL_AMOUNT   NUMBER(8,2),
  CASH_AMOUNT    NUMBER(8,2),
  POINTS_APPLIED NUMBER(10),
  POINT_VALUE    NUMBER(8,2),
  STATUS         VARCHAR2(20),
  PAYMENT_TIME   TIMESTAMP,
  RECEIPT_NO     VARCHAR2(50),
  REMARKS        VARCHAR2(200),
  PAYMENT_METHOD VARCHAR2(100),
  TYPE           VARCHAR2(50),
  CONSTRAINT FK_PAY_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
  CONSTRAINT FK_PAY_TICKET   FOREIGN KEY (TICKET_ID)   REFERENCES TICKET (TICKET_ID),
  CONSTRAINT CHK_PAY_STATUS  CHECK (LOWER(STATUS) IN ('completed','pending','failed'))
);

CREATE TABLE POINT_TRANSACTION (
  POINT_TXN_ID  VARCHAR2(12)  PRIMARY KEY,
  CUSTOMER_ID   VARCHAR2(12)  NOT NULL,
  PAYMENT_ID    VARCHAR2(12),
  POINT_CHANGE  NUMBER(10),
  SOURCE        VARCHAR2(50),
  REMARKS       VARCHAR2(200),
  CREATED_AT    TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_PTXN_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
  CONSTRAINT FK_PTXN_PAYMENT  FOREIGN KEY (PAYMENT_ID)  REFERENCES PAYMENT_RECORD (PAYMENT_ID)
);

CREATE TABLE TRIP_STOP_LOG (
  TRIP_STOP_ID        VARCHAR2(12)  PRIMARY KEY,
  BUS_SCHEDULE_ID     VARCHAR2(12)  NOT NULL,
  PLATFORM_ID         VARCHAR2(12)  NOT NULL,
  ACTUAL_ARRIVAL_TIME   TIMESTAMP,
  ACTUAL_DEPARTURE_TIME TIMESTAMP,
  STATUS              VARCHAR2(20),
  REMARKS             VARCHAR2(200),
  CONSTRAINT FK_TSL_SCHEDULE FOREIGN KEY (BUS_SCHEDULE_ID) REFERENCES BUS_SCHEDULE (BUS_SCHEDULE_ID),
  CONSTRAINT FK_TSL_PLATFORM FOREIGN KEY (PLATFORM_ID)     REFERENCES BUS_PLATFORM (PLATFORM_ID),
  CONSTRAINT CHK_TSL_TIME CHECK (
    ACTUAL_DEPARTURE_TIME IS NULL OR ACTUAL_ARRIVAL_TIME IS NULL OR ACTUAL_DEPARTURE_TIME >= ACTUAL_ARRIVAL_TIME
  )
);

-- ========= MAINTENANCE (depends on BUS / STAFF) =========
CREATE TABLE BUS_MAINTENANCE (
  MAINTENANCE_ID        VARCHAR2(12)  PRIMARY KEY,
  BUS_ID                VARCHAR2(12)  NOT NULL,
  SERVICE_ID            VARCHAR2(12)  NOT NULL,
  ACTUAL_COST           NUMBER(8,2),
  ADDITIONAL_COST       NUMBER(8,2),
  ADDITIONAL_REMARKS    VARCHAR2(200),
  STATUS                VARCHAR2(20)  DEFAULT 'in_progress',
  MAINTENANCE_DONE_DATE TIMESTAMP     NOT NULL,
  CREATED_AT            TIMESTAMP     DEFAULT SYSTIMESTAMP,
  REMARKS               VARCHAR2(200),
  CONSTRAINT FK_BM_BUS     FOREIGN KEY (BUS_ID)     REFERENCES BUS (BUS_ID),
  CONSTRAINT FK_BM_SERVICE FOREIGN KEY (SERVICE_ID) REFERENCES MAINTENANCE_SERVICE (SERVICE_ID),
  CONSTRAINT UK_BM_BS_DATE UNIQUE (BUS_ID, SERVICE_ID, MAINTENANCE_DONE_DATE),
  CONSTRAINT CHK_BM_STATUS CHECK (LOWER(STATUS) IN ('completed','in_progress'))
);

CREATE TABLE MAINTENANCE_STAFF_ASSIGNMENT (
  MAINTENANCE_ID VARCHAR2(12) NOT NULL,
  STAFF_ID       VARCHAR2(12) NOT NULL,
  ASSIGNED_AT    TIMESTAMP    DEFAULT SYSTIMESTAMP,
  PRIMARY KEY (MAINTENANCE_ID, STAFF_ID),
  CONSTRAINT FK_MSA_MAINT FOREIGN KEY (MAINTENANCE_ID) REFERENCES BUS_MAINTENANCE (MAINTENANCE_ID),
  CONSTRAINT FK_MSA_STAFF FOREIGN KEY (STAFF_ID)       REFERENCES STAFF (STAFF_ID)
);

-- ========= RENTAL (depends on SHOP / STAFF) =========
CREATE TABLE RENTAL_COLLECTION (
  SHOP_ID         VARCHAR2(12)  NOT NULL,
  STAFF_ID        VARCHAR2(12)  NOT NULL,
  RENTAL_AMOUNT   NUMBER(8,2),
  STATUS          VARCHAR2(20),
  RENTAL_MONTH    DATE,
  CREATED_AT      TIMESTAMP     DEFAULT SYSTIMESTAMP,
  COLLECTION_DATE TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT PK_RENTAL_COLLECTION PRIMARY KEY (SHOP_ID, STAFF_ID, COLLECTION_DATE),
  CONSTRAINT FK_RC_SHOP  FOREIGN KEY (SHOP_ID)  REFERENCES SHOP (SHOP_ID),
  CONSTRAINT FK_RC_STAFF FOREIGN KEY (STAFF_ID) REFERENCES STAFF (STAFF_ID)
);
