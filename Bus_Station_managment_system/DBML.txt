Table Customer {
  customerID int [pk, increment, note: 'Primary Key, Auto Increment']
  fullName varchar(100) [not null]
  ICPassportNo varchar(30) [unique, not null, note: 'IC number / Passport']
  gender char(1)
  birthDate date
  phoneNumber varchar(20)
  email varchar(100)
   pointBalance int [default: 0, note: 'Quick access to current points']
  customerType int [note: 'FK to CustomerType']
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

Table Payment {
  paymentID int [pk, increment, note: 'Unique ID for each payment transaction']
  customerID int [note: 'FK to Customer']
  paymentMethodID int [note: 'FK to PaymentMethod']
  ticketID int [note: 'FK to Ticket or Order, can be NULL']
  amount decimal(8,2) [note: 'Amount paid']
  status varchar(20) [note: "e.g. 'Completed', 'Pending', 'Failed'"]
  paymentTime datetime [note: 'When payment was made']
  receiptNo varchar(50) [note: 'Reference from payment gateway']
  remarks varchar(200) [note: 'Notes or error messages']
  paymentMethod varchar(100)
  pointApply number(5,2) 
  type varchar(50) [note: "'bookingTicket', 'Ticket'"]
}
Table TripStopLog {
  tripStopID int [pk, increment]
  BusScheduleID int [not null, note: 'FK to BusSchedule']
  platformID int [not null, note: 'FK to BusPlatform']
  actualArrivalTime datetime
  actualDepartureTime datetime
  status varchar(20) [note: "e.g. 'Arrived', 'Skipped', 'Delayed'"]
}

Table Staff {
  staffID int [pk, increment, note: 'Unique identifier for staff']
  companyID int [note: 'FK to BusCompany']
  fullName varchar(100) [not null]
  ICPassportNo varchar(30) [unique, not null]
  phoneNumber varchar(20)
  email varchar(100)
  hireDate date [note: 'Date of employment']
  salary decimal(10,2)
  status varchar(20) [note: "e.g. 'Active', 'On Leave', 'Terminated'"]
  roleID int [note: 'FK to StaffRole']

  driver related (NULL ,if ,not ,driver)
  licenseNo varchar(50) [unique, note: 'Driving license number if driver']
  licenseType varchar(20) [note: "e.g. 'PSV', 'GDL'"]
  
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}


Table StaffRole {
  roleID int [pk, increment, note: 'Unique role ID']
  roleName varchar(50) [not null, note: "e.g. 'Counter Staff', 'Cleaner'"]
  description varchar(200)
}
Table BusCompany {
  companyID int [pk, increment, note: 'Unique company identifier']
  companyName varchar(100) [not null, note: 'Name of the bus company']
  registrationNo varchar(50) [unique, note: 'Company registration / license number']
  phoneNumber varchar(20)
  email varchar(100)
  address varchar(200)
  status varchar(20) [note: "e.g. 'Active', 'Suspended'"]
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

Table Bus {
  busID int [pk, increment, note: 'Unique identifier for bus']
  companyID int [not null, note: 'FK to BusCompany']
  plateNo varchar(20) [unique, not null, note: 'Vehicle registration number']
  model varchar(50) [note: 'Bus model / type (e.g. Hino 40-Seater)']
  capacity int [note: 'Number of seats']
  status varchar(20) [note: "e.g. 'Active', 'Maintenance', 'Retired'"]
  year int [note: 'Year of manufacture / acquisition']
  remarks varchar(200) [note: 'Notes like AC, TV etc.']
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

Table Route {
  routeID int [pk, increment, note: 'Unique ID for this route']
  routeName varchar(50) [not null, note: 'Name or code like "U34", "KLCC - Bukit Bintang"']
  startPoint varchar(100) [note: 'Starting terminal / station name']
  endPoint varchar(100) [note: 'Ending terminal / station name']
  distanceKM decimal(6,2) [note: 'Total distance in km']
  estimatedDuration int [note: 'Typical trip duration in minutes']
  status varchar(20) [note: "e.g. 'Active', 'Inactive' if closed"]
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}


Table BusPlaform {
  plaformID int [pk, increment, note: 'Unique ID for station']
  StationID int [not null , note: "FK_stationId"]
  plaformName varchar(100) [not null, note: 'e.g. "KLCC", "Pasar Seni"']
  location varchar(150) [note: 'GPS coordinates or address']
  status varchar(20) [note: "e.g. 'Active', 'Closed'"]
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
}
Table DriverAssignment {
  assignmentID int [pk, increment, note: 'Unique assignment record']
  staffID int [not null, note: 'FK to Staff (driver)']
  busID int [not null, note: 'FK to Bus']
  BusScheduleID int [not null, note: 'FK to BusSchedule']
  assignedFrom datetime
  assignedTo datetime
  status varchar(20)
  remarks varchar(200)

  Note: 'Assigns a staff (driver) and bus to run a scheduled trip'
}


Table RouteStation {
  routeStationID int [pk, increment]
  routeID int [not null, note: 'FK to Route']
  plaformID int [not null, note: 'FK to BusStation']
  stopOrder int [not null, note: 'Sequence number (1,2,3,...)']
  estimatedArrivalOffset int [note: 'Minutes from route start']

  Note: 'Defines ordered stations along a route'
}
Table BusSchedule {
  BusScheduleID int [pk, increment, note: 'Unique ID for each planned trip']
  routeID int [not null, note: 'FK to Route']
  plannedDepartureTime datetime [not null, note: 'When this trip starts']
  plannedArrivalTime datetime [note: 'Estimated end time']
  status varchar(20) [default: 'Planned', note: "e.g. 'Planned', 'Cancelled', 'Completed'"]
  remarks varchar(200) [note: 'Any notes']
  price number(6,2) [note : '666.66']
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}
Table BusMaintenance {
  maintenanceID int [pk, increment, note: 'Unique maintenance record']
  busID int [not null, note: 'FK to Bus']
  staffID int [not null, note: 'FK to Staff who performed']
  serviceType varchar(50) [note: "e.g. 'Engine Check', 'Tyre Replace', 'Wash'"]
  cost decimal(8,2)
  maintenanceDate datetime [not null]
  remarks varchar(200)
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
}
Table Ticket {
  ticketID int [pk, increment, note: 'Unique ticket']
  BusScheduleID int [not null, note: 'FK to BusSchedule']
  customerID int [not null, note: 'FK to Customer']
  seatNo varchar(10) [note: 'Seat identifier']
  price decimal(8,2) [not null]
  status varchar(20) [default: 'Booked', note: "e.g. 'Booked', 'Cancelled', 'Refunded'"]
  bookedAt datetime [default: `CURRENT_TIMESTAMP`]
  paymentID int [note: 'FK to Payment if paid']

  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}
Table Tenant {
  tenantID int [pk, increment, note: 'Unique tenant ID']
  tenantName varchar(100) [not null, note: 'Company or individual name']
  contactPerson varchar(100)
  phoneNumber varchar(20)
  email varchar(100)
  address varchar(200)
  status varchar(20) [note: "e.g. 'Active', 'Terminated'"]
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}
Table Shop {
  shopID int [pk, increment, not null , note: 'Unique shop ID' ]
  shopNo varchar(20) [not null, note: 'Shop lot number or identifier']
  shopType varchar(20) [note: "'FoodCourt' or 'ShopLot'"]
  size decimal(8,2) [note: 'Size in sq ft or sqm']
  rentalFee decimal(10,2)
  deposit decimal(10,2)
  tenantID int [note: 'FK to Tenant']
  contractStart date
  contractEnd date
  stationID int [note: 'FK to BusStation where shop is located']
  status varchar(20) [note: "e.g. 'Occupied', 'Vacant'"]

  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}
Table BusStation {
  stationID int [pk, increment ]
  stationName varchar(100)
  location varchar(150)
  status varchar(20)
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
}

Table ShopPayment {
  shopPayID int [pk, increment, note: 'Unique payment record']
  shopID int [not null, note: 'FK to Shop']
  tenantID int [not null, note: 'FK to Tenant for quick ref']
  payType varchar(20) [not null, note: "e.g. 'Rental', 'Deposit', 'Penalty'"]
  amount decimal(10,2) [not null]
  paymentDate datetime [not null]
  paymentMethod varchar(30) [note: "e.g. 'Cash', 'Transfer', 'Cheque'"]
  status varchar(20) [note: "e.g. 'Completed', 'Pending', 'Failed'"]
  receiptNo varchar(50)
  remarks varchar(200)

  createdAt datetime [default: `CURRENT_TIMESTAMP`]
  updatedAt datetime [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}
Table PointTransaction {
  pointTxnID int [pk, increment, note: 'Unique point transaction']
  customerID int [not null, note: 'FK to Customer']
  change int [note: '+10 for earn, -50 for redeem']
  source varchar(50) [note: "e.g. 'Ticket Purchase', 'Birthday Promo'"]
  paymentID int [note: 'FK to Payment if tied to purchase', null]
  remarks varchar(200)
  createdAt datetime [default: `CURRENT_TIMESTAMP`]
}
Ref: PointTransaction.paymentID - Payment.paymentID
Ref: PointTransaction.customerID > Customer.customerID
Ref: ShopPayment.shopID > Shop.shopID
Ref: ShopPayment.tenantID > Tenant.tenantID
Ref: Shop.stationID > BusStation.stationID
Ref: BusPlaform.StationID > BusStation.stationID
Ref: Staff.companyID > BusCompany.companyID
Ref: Bus.companyID > BusCompany.companyID
Ref: Shop.tenantID > Tenant.tenantID
Ref: BusMaintenance.busID > Bus.busID
Ref: BusMaintenance.staffID > Staff.staffID
Ref: BusSchedule.routeID > Route.routeID
Ref: BusSchedule.BusScheduleID < TripStopLog.BusScheduleID
Ref: RouteStation.routeID > Route.routeID
Ref: RouteStation.plaformID > BusPlaform.plaformID

Ref: Staff.roleID > StaffRole.roleID
Ref: DriverAssignment.staffID > Staff.staffID
Ref: DriverAssignment.busID > Bus.busID
Ref: DriverAssignment.BusScheduleID > BusSchedule.BusScheduleID
Ref: Ticket.BusScheduleID > BusSchedule.BusScheduleID
Ref: Ticket.customerID > Customer.customerID
Ref: Ticket.paymentID > Payment.paymentID
Ref: TripStopLog.platformID > BusPlaform.plaformID
Ref: Payment.customerID > Customer.customerID
