CREATE OR REPLACE VIEW viewRoute AS
SELECT r.routeId,
       r.routeName,
       r.status AS routeStatus,
       (SELECT COUNT(*) FROM routeStation rs WHERE rs.routeId = r.routeId) AS platformsTotal,
       (SELECT COUNT(*) FROM routeStation rs JOIN busPlatform bp ON bp.platformId = rs.platformId
         WHERE rs.routeId = r.routeId AND LOWER(bp.status)='active')   AS platformsActive,
       (SELECT COUNT(*) FROM routeStation rs JOIN busPlatform bp ON bp.platformId = rs.platformId
         WHERE rs.routeId = r.routeId AND LOWER(bp.status)='inactive') AS platformsInactive,
       (SELECT COUNT(DISTINCT bp.stationId) FROM routeStation rs JOIN busPlatform bp ON bp.platformId = rs.platformId
         WHERE rs.routeId = r.routeId) AS stationsTotal,
       (SELECT COUNT(*) FROM routeDriverAssignmentList rda
         WHERE rda.routeId = r.routeId AND LOWER(rda.status)='active')   AS assignmentsActive,
       (SELECT COUNT(*) FROM routeDriverAssignmentList rda
         WHERE rda.routeId = r.routeId AND LOWER(rda.status)='inactive') AS assignmentsInactive,
       (SELECT COUNT(*) FROM busSchedule bs
         JOIN routeDriverAssignmentList rda ON rda.routeDriverAssignmentId = bs.routeDriverAssignmentId
         WHERE rda.routeId = r.routeId
           AND bs.plannedDepartureTime BETWEEN SYSTIMESTAMP - NUMTODSINTERVAL(30,'DAY') AND SYSTIMESTAMP
           AND LOWER(bs.status)='completed') AS last30Completed,
       (SELECT COUNT(*) FROM busSchedule bs
         JOIN routeDriverAssignmentList rda ON rda.routeDriverAssignmentId = bs.routeDriverAssignmentId
         WHERE rda.routeId = r.routeId
           AND bs.plannedDepartureTime BETWEEN SYSTIMESTAMP - NUMTODSINTERVAL(30,'DAY') AND SYSTIMESTAMP
           AND LOWER(bs.status)='cancelled') AS last30Cancelled,
       (SELECT ROUND(
                 100 * NVL(
                   SUM(CASE WHEN LOWER(bs.status)='cancelled' THEN 1 ELSE 0 END)
                   / NULLIF(SUM(CASE WHEN LOWER(bs.status) IN ('completed','cancelled') THEN 1 ELSE 0 END), 0),
                   0
                 ), 2)
          FROM busSchedule bs
          JOIN routeDriverAssignmentList rda ON rda.routeDriverAssignmentId = bs.routeDriverAssignmentId
          WHERE rda.routeId = r.routeId
            AND bs.plannedDepartureTime BETWEEN SYSTIMESTAMP - NUMTODSINTERVAL(30,'DAY') AND SYSTIMESTAMP
       ) AS last30CancelRatePct
FROM route r;




SELECT * FROM (SELECT * FROM viewRoute ORDER BY routeId) WHERE ROWNUM <= 10;



















CREATE OR REPLACE VIEW vwStationOps AS
/* ---------- base ---------- */
WITH st AS (
  SELECT stationId, stationName, status FROM busStation
),
platform_counts AS (
  SELECT stationId,
         COUNT(*) AS platformsTotal,
         SUM(CASE WHEN LOWER(status)='active'   THEN 1 ELSE 0 END) AS platformsActive,
         SUM(CASE WHEN LOWER(status)='inactive' THEN 1 ELSE 0 END) AS platformsInactive
  FROM   busPlatform
  GROUP  BY stationId
),
routes_by_station AS (
  SELECT bp.stationId, COUNT(DISTINCT rs.routeId) AS routesCount
  FROM   routeStation rs
  JOIN   busPlatform bp ON bp.platformId = rs.platformId
  GROUP  BY bp.stationId
),
last30_sched AS (
  SELECT DISTINCT bp.stationId,
         bs.busScheduleId,
         LOWER(bs.status) AS schedStatus
  FROM   busSchedule bs
  JOIN   routeDriverAssignmentList rda ON rda.routeDriverAssignmentId = bs.routeDriverAssignmentId
  JOIN   routeStation rs              ON rs.routeId = rda.routeId
  JOIN   busPlatform bp               ON bp.platformId = rs.platformId
  WHERE  bs.plannedDepartureTime BETWEEN (SYSTIMESTAMP - NUMTODSINTERVAL(30,'DAY')) AND SYSTIMESTAMP
),
last30_rollup AS (
  SELECT stationId,
         SUM(CASE WHEN schedStatus='completed' THEN 1 ELSE 0 END) AS last30Completed,
         SUM(CASE WHEN schedStatus='cancelled' THEN 1 ELSE 0 END) AS last30Cancelled
  FROM   last30_sched
  GROUP  BY stationId
)
SELECT
  s.stationId,
  s.stationName,
  s.status                         AS stationStatus,
  NVL(pc.platformsTotal,0)         AS platformsTotal,
  NVL(pc.platformsActive,0)        AS platformsActive,
  NVL(pc.platformsInactive,0)      AS platformsInactive,
  NVL(r.routesCount,0)             AS routesCount,
  NVL(l30.last30Completed,0)       AS last30Completed,
  NVL(l30.last30Cancelled,0)       AS last30Cancelled,
  CASE
    WHEN NVL(l30.last30Completed,0)+NVL(l30.last30Cancelled,0)=0 THEN 0
    ELSE ROUND(100 * NVL(l30.last30Cancelled,0) /
               (NVL(l30.last30Completed,0)+NVL(l30.last30Cancelled,0)), 2)
  END AS last30CancelRatePct
FROM st s
LEFT JOIN platform_counts    pc ON pc.stationId = s.stationId
LEFT JOIN routes_by_station  r  ON r.stationId  = s.stationId
LEFT JOIN last30_rollup      l30 ON l30.stationId = s.stationId;


SELECT * FROM (SELECT * FROM vwStationOps ORDER BY stationId) WHERE ROWNUM <= 10;













SET PAGESIZE 200
SET LINESIZE 200
SET TAB OFF
SET TRIMSPOOL ON
SET COLSEP ' | '
ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'DD-MON-YYYY HH24:MI:SS';


LEAR COLUMNS

/* ===== viewRoute ===== */
COLUMN routeId               FORMAT A8      HEADING 'Route'
COLUMN routeName             FORMAT A28     HEADING 'Route Name' WORD_WRAPPED
COLUMN routeStatus           FORMAT A10     HEADING 'Status'

COLUMN platformsTotal        FORMAT 999     HEADING 'Plat|Total'
COLUMN platformsActive       FORMAT 999     HEADING 'Plat|Active'
COLUMN platformsInactive     FORMAT 999     HEADING 'Plat|Inactive'
COLUMN stationsTotal         FORMAT 999     HEADING 'Stations'

COLUMN assignmentsActive     FORMAT 9,999   HEADING 'Assign|Active'
COLUMN assignmentsInactive   FORMAT 9,999   HEADING 'Assign|Inactive'

COLUMN upcomingPlanned       FORMAT 9,999   HEADING 'Upcoming|Planned'
COLUMN nextPlannedDeparture  FORMAT A19     HEADING 'Next Planned|Departure'

COLUMN last30Completed       FORMAT 9,999   HEADING 'Last 30d|Completed'
COLUMN last30Cancelled       FORMAT 9,999   HEADING 'Last 30d|Cancelled'
COLUMN last30CancelRatePct   FORMAT 990.99  HEADING 'Last 30d|Cancel %'

-- Example:
-- SELECT * FROM viewRoute ORDER BY routeId;


/* ===== vwStationOps ===== */
COLUMN stationId              FORMAT A8      HEADING 'Station'
COLUMN stationName            FORMAT A25     HEADING 'Station Name' WORD_WRAPPED
COLUMN stationStatus          FORMAT A10     HEADING 'Status'

COLUMN platformsTotal         FORMAT 999     HEADING 'Plat|Total'
COLUMN platformsActive        FORMAT 999     HEADING 'Plat|Active'
COLUMN platformsInactive      FORMAT 999     HEADING 'Plat|Inactive'

COLUMN routesCount            FORMAT 9,999   HEADING 'Routes'
COLUMN upcomingPlanned        FORMAT 9,999   HEADING 'Upcoming|Planned'
COLUMN nextPlannedDeparture   FORMAT A19     HEADING 'Next Planned|Departure'

COLUMN last30Completed        FORMAT 9,999   HEADING 'Last 30d|Completed'
COLUMN last30Cancelled        FORMAT 9,999   HEADING 'Last 30d|Cancelled'
COLUMN last30CancelRatePct    FORMAT 990.99  HEADING 'Last 30d|Cancel %'

COLUMN upcomingAvgSeatUtilPct FORMAT 990.99  HEADING 'Next 7d|Seat Util %'
