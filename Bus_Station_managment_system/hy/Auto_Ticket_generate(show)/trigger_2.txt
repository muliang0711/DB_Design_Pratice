CREATE OR REPLACE TRIGGER BS_AI_GEN_TICKETS
FOR INSERT ON busSchedule
COMPOUND TRIGGER

  TYPE t_ids IS TABLE OF busSchedule.busScheduleId%TYPE;
  g_ids t_ids := t_ids();

  BEFORE STATEMENT IS
  BEGIN
    g_ids.DELETE;
  END BEFORE STATEMENT;

  AFTER EACH ROW IS
  BEGIN
    g_ids.EXTEND;
    g_ids(g_ids.LAST) := :NEW.busScheduleId;
  END AFTER EACH ROW;

  AFTER STATEMENT IS
  BEGIN
    IF g_ids.COUNT > 0 THEN
      FOR i IN 1 .. g_ids.COUNT LOOP
        -- Safe now: the INSERT statement has finished; busSchedule is not mutating
        GEN_TICKETS_FOR_SCHEDULE(g_ids(i));
      END LOOP;
    END IF;
  END AFTER STATEMENT;

END BS_AI_GEN_TICKETS;
/
SHOW ERRORS TRIGGER BS_AI_GEN_TICKETS;

select busScheduleId from busSchedule ;
select * from ticket where busScheduleId = 'S000500';

INSERT INTO busSchedule 
(busScheduleId, 
routeDriverAssignmentId,
 plannedDepartureTime, 
 plannedArrivalTime, 
 status, 
 remarks, 
 expectedProfit, 
 createdAt, 
 updatedAt) VALUES 
 ('S000500', 'RD400', TO_TIMESTAMP('2025-05-13 20:45', 'YYYY-MM-DD HH24:MI'), TO_TIMESTAMP('2025-05-14 00:55', 'YYYY-MM-DD HH24:MI'), 'Planned', 'Generated schedule for RD400', 1262.05, SYSTIMESTAMP, SYSTIMESTAMP);

 DELETE FROM busSchedule
  WHERE busScheduleId = 'S000500';
